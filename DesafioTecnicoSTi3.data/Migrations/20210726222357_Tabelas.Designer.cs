// <auto-generated />
using DesafioTecnicoSTi3.data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DesafioTecnicoSTi3.data.Migrations
{
    [DbContext(typeof(DesafioTecnicoSTi3Context))]
    [Migration("20210726222357_Tabelas")]
    partial class Tabelas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("DesafioTecnicoSTi3.data.Entidades.Clientes", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("cnpj")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("cpf")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("dataNascimento")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("email")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("nome")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("razaoSocial")
                        .HasColumnType("varchar(100)");

                    b.HasKey("id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("DesafioTecnicoSTi3.data.Entidades.Configuracoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("UrlAPI")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Configuracoes");
                });

            modelBuilder.Entity("DesafioTecnicoSTi3.data.Entidades.EnderecoEntrega", b =>
                {
                    b.Property<long>("codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("bairro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("cep")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("cidade")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("complemento")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("endereco")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("estado")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("numero")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("referencia")
                        .HasColumnType("varchar(100)");

                    b.HasKey("codigo");

                    b.ToTable("EnderecoEntregas");
                });

            modelBuilder.Entity("DesafioTecnicoSTi3.data.Entidades.Item", b =>
                {
                    b.Property<long>("codigo_item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("idProduto")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("nome")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("quantidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("valorUnitario")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("codigo_item");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("DesafioTecnicoSTi3.data.Entidades.Pagamento", b =>
                {
                    b.Property<long>("cod_pgto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("codigo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("nome")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("parcela")
                        .HasColumnType("int(30)");

                    b.Property<decimal>("valor")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("cod_pgto");

                    b.ToTable("Pagamento");
                });
#pragma warning restore 612, 618
        }
    }
}
